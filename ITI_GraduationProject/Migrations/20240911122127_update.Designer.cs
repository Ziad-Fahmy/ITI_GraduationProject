// <auto-generated />
using ITI_GraduationProject.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_GraduationProject.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240911122127_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITI_GraduationProject.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "All kinds of electronic items",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Wide range of books and literature",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Home and office furniture",
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Fashion and apparel",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Sports equipment and accessories",
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Toys for children of all ages",
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Daily grocery and essentials",
                            Name = "Grocery"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Beauty and personal care products",
                            Name = "Beauty"
                        });
                });

            modelBuilder.Entity("ITI_GraduationProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 1234m,
                            Quantity = 22,
                            Title = " Mouse"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 2234m,
                            Quantity = 11,
                            Title = " Gaming Monitor  "
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 3234m,
                            Quantity = 23,
                            Title = " Keyboard  "
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 4234m,
                            Quantity = 18,
                            Title = " Gaming Headset"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 5234m,
                            Quantity = 8,
                            Title = " Motherboard "
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 6234m,
                            Quantity = 3,
                            Title = " Mouse pad"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 7234m,
                            Quantity = 2,
                            Title = " RAM "
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 8234m,
                            Quantity = 5,
                            Title = " Usb driver"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 9234m,
                            Quantity = 6,
                            Title = " Hard disk "
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 10234m,
                            Quantity = 4,
                            Title = " SSD "
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 10234m,
                            Quantity = 16,
                            Title = " Proccessor "
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            Description = "This is Description",
                            ImagePath = "Image_Path",
                            Price = 10234m,
                            Quantity = 26,
                            Title = " Graphics card "
                        });
                });

            modelBuilder.Entity("ITI_GraduationProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Ziad123@mail.com",
                            FirstName = "Ziad",
                            LastName = "Fahmy",
                            Password = "123 "
                        },
                        new
                        {
                            Id = 2,
                            Email = "Nour123@mail.com",
                            FirstName = "Nourhan",
                            LastName = "Khalil",
                            Password = "123 "
                        },
                        new
                        {
                            Id = 3,
                            Email = "Rewan123@mail.com",
                            FirstName = "Rewan",
                            LastName = "Reda",
                            Password = "123 "
                        },
                        new
                        {
                            Id = 4,
                            Email = "Morcos123@mail.com",
                            FirstName = "Morcos",
                            LastName = "Osama",
                            Password = "123 "
                        });
                });

            modelBuilder.Entity("ITI_GraduationProject.Models.Product", b =>
                {
                    b.HasOne("ITI_GraduationProject.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ITI_GraduationProject.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
